<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.she.health.checkup.mapper.CheckupResultMapper">
    <select id="getCheckupResults" resultType="com.she.health.model.CheckupResult">
		select p.hea_checkup_plan_no, p.hea_checkup_plan_nm, p.hea_checkup_class_cd, che.code_nm as hea_checkup_class_nm
			, d.dept_cd, d.dept_nm, u.user_id, u.user_nm, od.dept_cd as dept_cd_org, od.dept_nm as dept_nm_org
			, u.com_sex_type_cd, case when u.com_sex_type_cd = 'M' then '남' else '여' end as com_sex_type_nm
			, o.hea_checkup_org_no, o.hea_checkup_org_nm
			, r.notify_plan_yn, r.notify_plan_ymd, r.special_checkup_ym, r.consent_yn, r.consent_ymd
			, r.reserve_ymd, r.reserve_batch_yn, r.hea_checked_org_no, co.hea_checkup_org_nm as hea_checked_org_nm, r.hea_checked_ymd
			, r.diagnosed_ymd, r.notify_result_yn, r.notify_result_ymd
			, r.hea_follow_up_cd, fc.code_nm as hea_follow_up_nm, r.hea_follow_up_remark
			, r.hea_workable_cd, wc.code_nm as hea_workable_nm, r.overall_opinion
			, r.create_user_id, cu.user_nm as create_user_nm, r.create_dt
			, r.update_user_id, uu.user_nm as update_user_nm, r.update_dt
			, rd.hea_diagnose_cd, dia.code_nm as hea_diagnose_nm
			, di.hea_disease_class_cd, dis.code_nm as hea_disease_class_nm, di.hea_disease_cd, di.hea_disease_nm
			, ( select case when count(*) > 0 then 'Y' else 'N' end
				from hea_suspect
				where user_id = r.user_id
				and convert(datetime, r.hea_checked_ymd) between be_managed_ymd and not_managed_ymd
				) as suspect_yn			
		from hea_checkup_plan p
		inner join com_code_master che
		on che.code_group_cd = 'HEA_CHECKUP_CLASS'
		and p.hea_checkup_class_cd = che.code
		inner join hea_checkup_result r
		on p.hea_checkup_plan_no = r.hea_checkup_plan_no
		inner join com_user u
		on r.user_id = u.user_id
		inner join com_dept od
		on r.dept_cd = od.dept_cd
		inner join com_dept d 
		on u.dept_cd = d.dept_cd
		inner join hea_checkup_org o
		on r.hea_checkup_org_no = o.hea_checkup_org_no
		inner join  hea_checkup_org co
		on r.hea_checked_org_no = co.hea_checkup_org_no
		left outer join hea_checkup_result_diag rd
		on r.hea_checkup_plan_no = rd.hea_checkup_plan_no
		and r.user_id = rd.user_id
		left outer join hea_disease di
		on rd.hea_disease_cd = di.hea_disease_cd
		left outer join com_code_master dis
		on dis.code_group_cd = 'HEA_DISEASE_CLASS'
		and di.hea_disease_class_cd = dis.code
		left outer join com_code_master dia
		on dia.code_group_cd = 'HEA_DIAGNOSE'
		and rd.hea_diagnose_cd = dia.code
		left outer join com_code_master fc
		on fc.code_group_cd = 'HEA_FOLLOW_UP'
		and r.hea_follow_up_cd = fc.code
		left outer join com_code_master wc
		on wc.code_group_cd = 'HEA_WORKABLE'
		and r.hea_workable_cd = wc.code
		left outer join com_user cu
		on r.create_user_id = cu.user_id
		left outer join com_user uu
		on r.update_user_id = uu.user_id
		where 1=1
		<if test="userId != null and !userId.equals('')">
		and r.user_id = #{userId}
		</if>
		<if test="checkupYear != null and !checkupYear.equals('')">
		and convert(varchar(4), p.start_ymd) = #{checkupYear}
		</if>
		<if test="heaCheckupPlanNo != null and heaCheckupPlanNo > 0">
		and p.hea_checkup_plan_no = #{heaCheckupPlanNo}
		</if>
		<if test="retirementYn != null and !retirementYn.equals('')">
		and u.use_yn = #{retirementYn}
		</if>
		<if test="heaDiagnoseCds != null and heaDiagnoseCds.length > 0">
		and dia.code in 
			<foreach collection="heaDiagnoseCds" item="heaDiagnoseCd" separator="," open="(" close=")" >
			#{heaDiagnoseCd}
			</foreach>		
		</if>
		<if test="heaDiseaseClassCd != null and !heaDiseaseClassCd.equals('')">
		and di.hea_disease_class_cd = #{heaDiseaseClassCd}
		</if>		
		<if test="heaDiseaseCd != null and !heaDiseaseCd.equals('')">
		and di.hea_disease_cd = #{heaDiseaseCd}
		</if>
		<if test="heaCheckedOrgNos != null and heaCheckedOrgNos.length > 0">
		and o.hea_checkup_org_no in
			<foreach collection="heaCheckedOrgNos" item="heaCheckedOrgNo" separator="," open="(" close=")" >
			#{heaCheckedOrgNo}
			</foreach>
		</if>
		<if test="userNm != null and !userNm.equals('')">
		and upper(u.user_nm) like '%'+upper(#{userNm})+'%'
		</if>
    </select>
    
    <select id="getCheckupResult" resultType="com.she.health.model.CheckupResult">
		select p.hea_checkup_plan_no, p.hea_checkup_plan_nm, p.hea_checkup_class_cd, che.code_nm as hea_checkup_class_nm
			, d.dept_cd, d.dept_nm, u.user_id, u.user_nm, od.dept_cd as dept_cd_org, od.dept_nm as dept_nm_org
			, u.com_sex_type_cd, case when u.com_sex_type_cd = 'M' then '남' else '여' end as com_sex_type_nm
			, o.hea_checkup_org_no, o.hea_checkup_org_nm
			, r.notify_plan_yn, r.notify_plan_ymd, r.special_checkup_ym, r.consent_yn, r.consent_ymd
			, r.reserve_ymd, r.reserve_batch_yn, r.hea_checked_org_no, co.hea_checkup_org_nm as hea_checked_org_nm, r.hea_checked_ymd
			, r.diagnosed_ymd, r.notify_result_yn, r.notify_result_ymd
			, r.hea_follow_up_cd, fc.code_nm as hea_follow_up_nm, r.hea_follow_up_remark
			, r.hea_workable_cd, wc.code_nm as hea_workable_nm, r.overall_opinion
			, r.create_user_id, cu.user_nm as create_user_nm, r.create_dt
			, r.update_user_id, uu.user_nm as update_user_nm, r.update_dt
			, ( select case when count(*) > 0 then 'Y' else 'N' end
				from hea_suspect
				where user_id = r.user_id
				and convert(datetime, r.hea_checked_ymd) between be_managed_ymd and not_managed_ymd
				) as suspect_yn			
		from hea_checkup_plan p
		inner join com_code_master che
		on che.code_group_cd = 'HEA_CHECKUP_CLASS'
		and p.hea_checkup_class_cd = che.code
		inner join hea_checkup_result r
		on p.hea_checkup_plan_no = r.hea_checkup_plan_no
		inner join com_user u
		on r.user_id = u.user_id
		inner join com_dept od
		on r.dept_cd = od.dept_cd
		inner join com_dept d 
		on u.dept_cd = d.dept_cd
		inner join hea_checkup_org o
		on r.hea_checkup_org_no = o.hea_checkup_org_no
		left outer join  hea_checkup_org co
		on r.hea_checked_org_no = co.hea_checkup_org_no
		left outer join com_code_master fc
		on fc.code_group_cd = 'HEA_FOLLOW_UP'
		and r.hea_follow_up_cd = fc.code
		left outer join com_code_master wc
		on wc.code_group_cd = 'HEA_WORKABLE'
		and r.hea_workable_cd = wc.code
		left outer join com_user cu
		on r.create_user_id = cu.user_id
		left outer join com_user uu
		on r.update_user_id = uu.user_id
		where r.hea_checkup_plan_no = #{heaCheckupPlanNo}
		and r.user_id = #{userId}
    </select>
    
    <select id="getCheckupResultDiags" resultType="com.she.health.model.CheckupResultDiag">
		select p.hea_checkup_plan_no, p.hea_checkup_plan_nm
			, u.user_id, u.user_nm
			, rd.hea_diagnose_cd, dic.code_nm as hea_diagnose_nm
			, d.hea_disease_class_cd, dc.code_nm as hea_disease_class_nm
			, d.hea_disease_cd, d.hea_disease_nm
			, h.hea_hazard_cd, h.hea_hazard_nm_ko, h.hea_hazard_nm_en
			, rd.gen_yn
			, rd.create_user_id, cu.user_nm as create_user_nm, rd.create_dt
			, rd.update_user_id, uu.user_nm as update_user_nm, rd.update_dt
		from hea_checkup_result r
		inner join hea_checkup_plan p
		on r.hea_checkup_plan_no = p.hea_checkup_plan_no
		inner join hea_checkup_result_diag rd
		on r.hea_checkup_plan_no = rd.hea_checkup_plan_no
		and r.user_id = rd.user_id
		inner join com_user u
		on r.user_id = u.user_id
		inner join hea_disease d
		on rd.hea_disease_cd = d.hea_disease_cd
		inner join com_code_master dc
		on dc.code_group_cd = 'HEA_DISEASE_CLASS'
		and d.hea_disease_class_cd = dc.code
		left outer join hea_hazard h
		on rd.hea_hazard_cd = h.hea_hazard_cd
		left outer join com_code_master dic
		on dic.code_group_cd = 'HEA_DIAGNOSE'
		and rd.hea_diagnose_cd = dic.code
		left outer join com_user cu
		on rd.create_user_id = cu.user_id
		left outer join com_user uu
		on rd.update_user_id = uu.user_id
		where r.hea_checkup_plan_no = #{heaCheckupPlanNo}
		and r.user_id = #{userId}
    </select>
    
    <select id="getTestItemResults" resultType="com.she.health.model.TestItemResult">
		select p.hea_checkup_plan_no, p.hea_checkup_plan_nm
			, u.user_id, u.user_nm
			, ir.hea_checkup_org_test_item_no
			, o.hea_checkup_org_no, o.hea_checkup_org_nm, ti.year, ti.hea_checkup_type_cd, tc.code_nm as hea_checkup_type_nm
			, i.hea_test_class_cd, ic.code_nm as hea_test_class_nm, i.hea_test_item_cd, i.hea_test_item_nm
			, ir.create_user_id, cu.user_nm as create_user_nm, ir.create_dt
			, ir.update_user_id, uu.user_nm as update_user_nm, ir.update_dt
			, i.unit, i.hea_result_type_cd, rc.code_nm as hea_result_type_nm, ir.num_result, ir.char_result
			, ( select isnull(t2.char_result, convert(varchar, t2.num_result))
				from hea_checkup_org_test_item t1
				inner join hea_test_item_result t2
				on t1.hea_checkup_org_test_item_no = t2.hea_checkup_org_test_item_no
				where convert(varchar(4), convert(int, ti.year) - 1) = t1.year 
				and ir.hea_test_item_cd = t2.hea_test_item_cd
				) as prev1_year_result
			, ( select isnull(t2.char_result, convert(varchar, t2.num_result))
				from hea_checkup_org_test_item t1
				inner join hea_test_item_result t2
				on t1.hea_checkup_org_test_item_no = t2.hea_checkup_org_test_item_no
				where convert(varchar(4), convert(int, ti.year) - 2) = t1.year 
				and ir.hea_test_item_cd = t2.hea_test_item_cd
				) as prev2_year_result
		from hea_checkup_result r
		inner join hea_checkup_plan p
		on r.hea_checkup_plan_no = p.hea_checkup_plan_no
		inner join com_user u
		on r.user_id = u.user_id
		inner join hea_test_item_result ir
		on r.hea_checkup_plan_no = ir.hea_checkup_plan_no
		inner join hea_checkup_org_test_item ti
		on ir.hea_checkup_org_test_item_no = ti.hea_checkup_org_test_item_no
		inner join hea_checkup_org o
		on ti.hea_checkup_org_no = o.hea_checkup_org_no
		inner join com_code_master tc
		on tc.code_group_cd = 'HEA_CHECKUP_TYPE'
		and ti.hea_checkup_type_cd = tc.code
		inner join hea_test_item i
		on ti.hea_test_item_cd = i.hea_test_item_cd		
		inner join com_code_master ic
		on ic.code_group_cd = 'HEA_TEST_CLASS'
		and i.hea_test_class_cd = ic.code
		inner join com_code_master rc
		on rc.code_group_cd = 'HEA_RESULT_TYPE'
		and i.hea_result_type_cd = rc.code
		left outer join com_user cu
		on ir.create_user_id = cu.user_id
		left outer join com_user uu
		on ir.update_user_id = uu.user_id
		where r.hea_checkup_plan_no = #{heaCheckupPlanNo}
		and r.user_id = #{userId}
		<if test="optionalYn != null and !optionalYn.equals('')">
		and ti.optional_yn = #{optionalYn}
		</if>
    </select>
        
    <update id="updateCheckupResult" parameterType="com.she.health.model.CheckupResult">
	    update hea_checkup_result
		set hea_checkup_plan_no = hea_checkup_plan_no
		<if test="heaWorkableCd != null">
			, hea_workable_cd = #{heaWorkableCd}
		</if>
		<if test="heaFollowUpCd != null">
			, hea_follow_up_cd = #{heaFollowUpCd}
		</if>
		<if test="overallOpinion != null">
			, overall_opinion = #{overallOpinion}
		</if>
		where hea_checkup_plan_no = #{heaCheckupPlanNo}
		and user_id = #{userId} 
    </update>
    
    <insert id="createCheckupResultDiag" parameterType="com.she.health.model.CheckupResultDiag">    	
    	insert into hea_checkup_result_diag (
			hea_checkup_plan_no
			, user_id
			, hea_disease_cd
			, hea_hazard_cd
			, hea_diagnose_cd
			, gen_yn
			, create_user_id
			, create_dt
		)
		values (
			#{heaCheckupPlanNo}
			, #{userId} 
			, #{heaDiseaseCd} 
			, #{heaHazardCd} 
			, #{heaDiagnoseCd} 
			, 'N'
			, #{createUserId} 
			, getdate()
		)
    </insert>
    
    <delete id="deleteCheckupResultDiag">
    	delete hea_checkup_result_diag
		where hea_checkup_plan_no = #{heaCheckupPlanNo}
		and user_id = #{userId}
		and hea_disease_cd = #{heaDiseaseCd}
    </delete>
    
    <insert id="createTestItemResult" parameterType="com.she.health.model.TestItemResult">
    	<selectKey keyProperty="heaCheckupOrgTestItemNo" resultType="int" order="BEFORE">
    		select hea_checkup_org_test_item_no
			from hea_checkup_org_test_item
			where hea_checkup_org_no = #{heaCheckupOrgNo}
			and hea_test_item_cd = #{heaTestItemCd}
			and hea_checkup_type_cd = #{heaCheckupTypeCd}
			and year in (
				select convert(varchar(4), start_ymd)
				from hea_checkup_plan
				where hea_checkup_plan_no = #{heaCheckupPlanNo}
			)
	  	</selectKey>
	    insert into hea_test_item_result (
			hea_checkup_plan_no
			, user_id
			, hea_checkup_org_test_item_no
			, hea_test_item_cd
			, num_result
			, char_result
			, create_user_id
			, create_dt
		)
		values (
			#{heaCheckupPlanNo}
			, #{userId} 
			, #{heaCheckupOrgTestItemNo} 
			, #{heaTestItemCd} 
			, case when #{heaResultTypeCd} = 'D' then null else #{numResult} end 
			, #{charResult} 
			, #{createUserId} 
			, getdate()
		)
    </insert>
    
    <delete id="deleteTestItemResult">
    	delete hea_test_item_result
		where hea_checkup_plan_no = #{heaCheckupPlanNo}
		and user_id = #{userId}
		<if test="heaCheckupOrgTestItemNo != null and heaCheckupOrgTestItemNo > 0">
		and hea_checkup_org_test_item_no = #{heaCheckupOrgTestItemNo}
		</if>
    </delete>
</mapper>